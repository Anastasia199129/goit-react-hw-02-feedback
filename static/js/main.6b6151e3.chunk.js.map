{"version":3,"sources":["components/statistics/Statistics.jsx","components/buttons/Buttons.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Buttons","goodIncrement","neutralIncrement","badIncrement","type","onClick","App","state","GoodIncrement","setState","prevState","NeutralIncrement","BadIncrement","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAmBeA,EAjBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OAEI,8BACI,+BACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,aCKDC,EAfC,SAAC,GAEO,IAFLC,EAEI,EAFJA,cACTC,EACa,EADbA,iBACNC,EAAmB,EAAnBA,aACE,OAAS,gCACL,wBAAQC,KAAK,SAASC,QAASJ,EAA/B,kBAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBAGA,wBAAQE,KAAK,SAASC,QAASF,EAA/B,qBC0DKG,E,4MA/DbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPW,cAAgB,WACd,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLf,KAAMe,EAAUf,KAAO,O,EAI7BgB,iBAAmB,WACjB,EAAKF,UAAS,SAAAC,GACZ,MAAO,CACLd,QAASc,EAAUd,QAAU,O,EAInCgB,aAAe,WACb,EAAKH,UAAS,SAAAC,GACZ,MAAO,CACLb,IAAKa,EAAUb,IAAM,O,EAI3BgB,mBAAqB,WACnB,OAAO,EAAKN,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,EAE3DiB,gCAAkC,WAChC,OAAOC,KAAKC,MACS,IAAlB,EAAKT,MAAMZ,MAAe,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,IAAM,EAAKU,MAAMZ,Q,4CAIhF,WACE,OACE,gCACE,wDACA,cAAC,EAAD,CACEM,cAAegB,KAAKT,cACpBN,iBAAkBe,KAAKN,iBACvBR,aAAcc,KAAKL,eAGrB,4CAECK,KAAKV,MAAMZ,MAAQsB,KAAKV,MAAMX,UAA8B,IAAnBqB,KAAKV,MAAMV,IACnD,cAAC,EAAD,CACEF,KAAMsB,KAAKV,MAAMZ,KACjBC,QAASqB,KAAKV,MAAMX,QACpBC,IAAKoB,KAAKV,MAAMV,IAChBC,MAAOmB,KAAKJ,qBACZd,mBAAoBkB,KAAKH,oCAG3B,2B,GAzDQI,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6b6151e3.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        \r\n        <div>\r\n            <ul>\r\n                <li>Good:{good}</li>\r\n                <li>Neutral:{neutral}</li>\r\n                <li>Bad:{bad}</li>\r\n                <li>Total:{total}</li>\r\n                <li>Positive feedback:{positivePercentage}%</li>\r\n            </ul>\r\n            </div>\r\n        )\r\n       \r\n       \r\n          }\r\n    \r\nexport default Statistics","import React from \"react\" \r\nconst Buttons = ({ goodIncrement,\r\n          neutralIncrement,\r\n    badIncrement }) => {   \r\n      return ( <div>\r\n          <button type=\"button\" onClick={goodIncrement}>\r\n            Good\r\n          </button>\r\n          <button type=\"button\" onClick={neutralIncrement}>\r\n            Neutral\r\n          </button>\r\n          <button type=\"button\" onClick={badIncrement}>\r\n            Bad\r\n          </button>\r\n        </div> )\r\n}\r\nexport default Buttons","// import './App.css';\nimport Statistics from './components/statistics/Statistics';\nimport Buttons from './components/buttons/Buttons';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  GoodIncrement = () => {\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n  NeutralIncrement = () => {\n    this.setState(prevState => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n  BadIncrement = () => {\n    this.setState(prevState => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor(\n      (this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good),\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Please leave feedback </h1>\n        <Buttons\n          goodIncrement={this.GoodIncrement}\n          neutralIncrement={this.NeutralIncrement}\n          badIncrement={this.BadIncrement}\n        ></Buttons>\n\n        <h2>Statistics</h2>\n\n        {this.state.good || this.state.neutral || this.state.bad === true ? (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          ></Statistics>\n        ) : (\n          'No feedback given'\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}