{"version":3,"sources":["components/statistics/statistics.module.css","components/feedbackOptions/feedbackOptions.module.css","components/section/section.module.css","components/notification/notification.module.css","components/statistics/Statistics.jsx","components/feedbackOptions/FeedbackOptions.jsx","components/section/Section.jsx","components/notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","item","FeedbackOptions","onButtonIncrement","styles","conteiner","button","type","name","onClick","Section","title","children","Notification","message","p","App","state","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,qBCA1ED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,EAAI,0B,qKC0BPC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OAEI,8BACI,+BACI,qBAAIC,UAAWC,IAAEC,KAAjB,mBAA8BP,KAC9B,qBAAIK,UAAWC,IAAEC,KAAjB,sBAAiCN,KACjC,qBAAII,UAAWC,IAAEC,KAAjB,kBAA6BL,KAC7B,qBAAIG,UAAWC,IAAEC,KAAjB,oBAA+BJ,KAC/B,qBAAIE,UAAWC,IAAEC,KAAjB,gCAA2CH,EAA3C,a,gBCWDI,EAlBS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBACvB,OAAQ,sBAAKJ,UAAWK,IAAOC,UAAvB,UACF,wBAAQN,UAAWK,IAAOE,OAAQC,KAAK,SAASC,KAAK,OAAOC,QAASN,EAArE,kBAGA,wBAAQJ,UAAWK,IAAOE,OAAQC,KAAK,SAASC,KAAK,UAAUC,QAASN,EAAxE,qBAGA,wBAAQJ,UAAWK,IAAOE,OAAQC,KAAK,SAASC,KAAK,MAAMC,QAASN,EAApE,qB,gBCIKO,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,oBAAIb,UAAWK,IAAOO,MAAtB,SAA8BA,IAC7BC,M,iBCOEC,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mBAAGf,UAAWC,IAAEe,EAAhB,SAAoBD,KC4EbE,E,4MAxEbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,kBAAoB,SAAAe,GAClB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOb,KAAOY,EAAUF,EAAEG,OAAOb,MAAQ,O,EAwBhDc,mBAAqB,WACnB,OAAO,EAAKL,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAE3D2B,gCAAkC,WAChC,OAAOC,KAAKC,MACS,IAAlB,EAAKR,MAAMvB,MAAe,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,IAAM,EAAKqB,MAAMvB,Q,4CAIhF,WACE,OACE,gCACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,kBAAmBuB,KAAKvB,sBAO5B,cAAC,EAAD,CAASQ,MAAM,aAAf,SACGe,KAAKT,MAAMvB,MAAQgC,KAAKT,MAAMtB,UAA8B,IAAnB+B,KAAKT,MAAMrB,IACnD,cAAC,EAAD,CACEF,KAAMgC,KAAKT,MAAMvB,KACjBC,QAAS+B,KAAKT,MAAMtB,QACpBC,IAAK8B,KAAKT,MAAMrB,IAChBC,MAAO6B,KAAKJ,qBACZxB,mBAAoB4B,KAAKH,oCAG3B,cAAC,EAAD,CAAcT,QAAQ,+B,GAhEhBa,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6f47130.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"statistics_item__1D2BK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"feedbackOptions_conteiner__2BwrJ\",\"button\":\"feedbackOptions_button__2v-lH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"section_title__15cpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"notification_p__33sFB\"};","import PropTypes from 'prop-types'\r\nimport s from './statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        \r\n        <div>\r\n            <ul>\r\n                <li className={s.item}>Good: {good}</li>\r\n                <li className={s.item}>Neutral: {neutral}</li>\r\n                <li className={s.item}>Bad: {bad}</li>\r\n                <li className={s.item}>Total: {total}</li>\r\n                <li className={s.item}>Positive feedback: {positivePercentage}%</li>\r\n            </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral:PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number\r\n\r\n}\r\n    \r\nexport default Statistics","import PropTypes from 'prop-types'\r\nimport styles from './feedbackOptions.module.css';\r\n\r\n\r\n    \r\nconst FeedbackOptions = ({ onButtonIncrement }) => {\r\n    return (<div className={styles.conteiner}>\r\n          <button className={styles.button} type=\"button\" name=\"good\" onClick={onButtonIncrement}>\r\n            Good\r\n          </button>\r\n          <button className={styles.button} type=\"button\" name=\"neutral\" onClick={onButtonIncrement}>\r\n            Neutral\r\n          </button>\r\n          <button className={styles.button} type=\"button\" name=\"bad\" onClick={onButtonIncrement}>\r\n            Bad\r\n          </button>\r\n        </div> )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n   onButtonIncrement: PropTypes.func \r\n}\r\n\r\nexport default FeedbackOptions\r\n    \r\n","import PropTypes from 'prop-types'\r\nimport styles from './section.module.css';\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\n\r\nexport default Section","import PropTypes from 'prop-types'\r\nimport s from './notification.module.css'\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={s.p}>{message}</p>\r\n    )\r\n}\r\n\r\n\r\nNotification.propTypes = {\r\n   message: PropTypes.string \r\n}\r\n\r\nexport default Notification\r\n\r\n","import './App.css';\nimport { Component } from 'react';\nimport Statistics from './components/statistics/Statistics';\nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Section from './components/section/Section';\nimport Notification from './components/notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onButtonIncrement = e => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n  // GoodIncrement = () => {\n  //   this.setState(prevState => {\n  //     return {\n  //       good: prevState.good + 1,\n  //     };\n  //   });\n  // };\n  // NeutralIncrement = () => {\n  //   this.setState(prevState => {\n  //     return {\n  //       neutral: prevState.neutral + 1,\n  //     };\n  //   });\n  // };\n  // BadIncrement = () => {\n  //   this.setState(prevState => {\n  //     return {\n  //       bad: prevState.bad + 1,\n  //     };\n  //   });\n  // };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor(\n      (this.state.good * 100) / (this.state.neutral + this.state.bad + this.state.good),\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onButtonIncrement={this.onButtonIncrement}\n            // goodIncrement={this.GoodIncrement}\n            // neutralIncrement={this.NeutralIncrement}\n            // badIncrement={this.BadIncrement}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.state.good || this.state.neutral || this.state.bad === true ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n            // 'No feedback given'\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}